{
  "_args": [
    [
      {
        "raw": "configuration-processor@~1",
        "scope": null,
        "escapedName": "configuration-processor",
        "name": "configuration-processor",
        "rawSpec": "~1",
        "spec": ">=1.0.0 <2.0.0",
        "type": "range"
      },
      "C:\\nodeWorkSpace\\board\\node_modules\\filesystem"
    ]
  ],
  "_from": "configuration-processor@>=1.0.0 <2.0.0",
  "_id": "configuration-processor@1.1.1",
  "_inCache": true,
  "_location": "/configuration-processor",
  "_npmUser": {
    "name": "wiktor.walc",
    "email": "w.walc@cksource.com"
  },
  "_npmVersion": "1.3.6",
  "_phantomChildren": {},
  "_requested": {
    "raw": "configuration-processor@~1",
    "scope": null,
    "escapedName": "configuration-processor",
    "name": "configuration-processor",
    "rawSpec": "~1",
    "spec": ">=1.0.0 <2.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/data-container",
    "/event-dispatcher",
    "/filesystem"
  ],
  "_resolved": "https://registry.npmjs.org/configuration-processor/-/configuration-processor-1.1.1.tgz",
  "_shasum": "f2189085b259d8cd9e5e7c2acbaec5c7f16205a2",
  "_shrinkwrap": null,
  "_spec": "configuration-processor@~1",
  "_where": "C:\\nodeWorkSpace\\board\\node_modules\\filesystem",
  "author": {
    "name": "Mateusz Charytoniuk",
    "email": "m.charyotniuk@cksource.com"
  },
  "autoload": {
    "commonjs": {
      "JsLoader/Configuration/modules": "libraries/modules",
      "JsLoader/Configuration": "libraries/scripts/JsLoader/Configuration"
    }
  },
  "bugs": {
    "url": "https://github.com/benderjs/configuration-processor/issues"
  },
  "dependencies": {},
  "description": "Configuration processor asserts that input configuration matches predefined configuration schema.",
  "devDependencies": {
    "grunt": "~0.4",
    "grunt-contrib-clean": "~0.5",
    "grunt-contrib-jshint": "~0.6",
    "grunt-contrib-watch": "~0.5",
    "grunt-istanbul": "~0.2",
    "grunt-jsbeautifier": "~0.2",
    "grunt-mocha-test": "~0.6",
    "istanbul": "~0.1",
    "mocha": "~1"
  },
  "directories": {},
  "dist": {
    "shasum": "f2189085b259d8cd9e5e7c2acbaec5c7f16205a2",
    "tarball": "https://registry.npmjs.org/configuration-processor/-/configuration-processor-1.1.1.tgz"
  },
  "engines": {
    "node": ">=0.8"
  },
  "homepage": "https://github.com/benderjs/configuration-processor#readme",
  "main": "libraries/modules/configuration-processor.js",
  "maintainers": [
    {
      "name": "wiktor.walc",
      "email": "w.walc@cksource.com"
    }
  ],
  "name": "configuration-processor",
  "optionalDependencies": {},
  "readme": "# Configuration Processor\n\nConfiguration processor asserts that input configuration matches predefined\nconfiguration schema.\n\nIt also provides some basic assertion tools.\n\n## Examples\n\n### Testing input agains predefined schema\n\n```JavaScript\nvar config = require(\"configuration-processor\"),\n    input,\n    processed;\n\ninput = {\n    key1: \"key1_value\",\n    key2: {\n        key2n1: false\n    }\n};\n\nprocessed = config.assertSchema({\n    key1: config.expectStringRegExp(/_value$/),\n    key2: config.expectSchema({\n        key2n1: config.expectBoolean(),\n        key2n2: config.expectBooleanDefault(true)\n    })\n}, input);\n```\n\nProcessed configuration looks like so:\n\n```JavaScript\n{\n    key1: \"key1_value\",\n    key2: {\n        key2n1: false,\n        key2n2: true\n    }\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/benderjs/configuration-processor.git"
  },
  "scripts": {
    "test": "grunt test"
  },
  "version": "1.1.1"
}
